class Solution {
public:
    string removeKdigits(string num, int k) {
         if (num.length() == k)
            return "0";

        int f=-1;
        while(k--){
            if(num.size()==1){num.erase(num.begin());break;}
            for(int i=0;i<num.size()-1;i++){
                
                if((num[i]-'0')>(num[i+1]-'0')){num.erase(num.begin()+i);f=0;break;}
                if((num[i]-'0')<= (num[i+1]-'0')){f=1;continue;}
               
            }
            if(f==1){num.erase(num.begin()+num.size()-1);}
            
        }
        while(true){
            if(*num.begin()=='0')
            {
                num.erase(num.begin());
            }
            else{
                break;
            }
        }
        if (num.length() == 0)
            return "0";
       return num; 
    }
};
static auto fastio = [](){
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);
    return nullptr;
}();