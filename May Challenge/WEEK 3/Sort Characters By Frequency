class Solution {
public:
    string frequencySort(string s) {
        unordered_map<char,int> m;
        for(auto it:s){
            m[it]++;
        }
        vector<pair<char,int>> v;
        copy(m.begin(),m.end(),back_inserter<vector<pair<char,int>>>(v));
        sort(v.begin(),v.end(),[](const pair<char,int> l,const pair<char,int> r){
            			if (l.second != r.second)
					return l.second > r.second;

				return l.first > r.first;
			});
       
        string result;
        for(auto it:v){
            int t=it.second;
            while(t--){
            result.push_back(it.first);}
        }
        return result;
    }
};
static int fastio = []() {
    #define endl '\n'
    std::ios::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(0);
    return 0;
}();
